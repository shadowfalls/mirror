{"title":"View Encapsulation in Angular 7","description":"This will explain in detail what view encapsulation is and its benefits in Angular 7","categoryId":"angular_7","content":[{"html":"<a href=\"https://angular.io/api/core/ViewEncapsulation\" title=\"https://angular.io/api/core/ViewEncapsulation\" target=\"_blank\">View encapsulation</a>&nbsp;is used to determine whether the styles defined with a component should affect other components or styles defined in other component should affect this component. To better understand what view encapsulation is we need to understand what Shadow DOM is.","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"Shadow DOM","isQuoted":false,"isGist":false,"isMainHeading":true,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"Shadow DOM is a web standard through which DOM tree and style encapsulation work. It allows <b>scope styling </b>which prevents styles written within a component bleeding outside it. It gives peace of mind when we are using the same component in a lot of places. Most browsers don't support Shadow DOM yet. But that doesn't me that we cannot use it. We can tell angular to use native Shadow DOM if we want. For browsers that don't support Shadow DOM Angular emulates it.","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"View Encapsulation Types","isQuoted":false,"isGist":false,"isMainHeading":true,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"Angular comes with view encapsulation built in, which enables us to use Shadow DOM or even emulate it. There are three view encapsulation types:","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"<b>ViewEncapsulation.None </b>- No Shadow DOM and no style encapsulation","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"<b>ViewEncapsulation.Emulated </b>- No Shadow DOM but style encapsulation emulation","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"<b>ViewEncapsulation.Native </b>- Enable native Shadow DOM","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"Each of the above three type exhibition 3 different levels of View Encapsulation. Lets go over them one by one.","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"ViewEncapsulation.None","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":true,"isCodeSection":false,"gist":""},{"html":"When we assign a component with ViewEncapsulation as <b>None</b>&nbsp;the component will have no Shadow DOM. We can set the encapsulation property to the components in the <i>@Component</i><b style=\"font-style: italic;\">&nbsp;</b>decorator.","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"import { ViewEncapsulation, Component, Input } from '@angular/core';<div><br></div><div>@Component({</div><div>&nbsp; &nbsp; selector: 'my-component',</div><div>&nbsp; &nbsp; template: `</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"my-component\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{ title }}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; `,</div><div>&nbsp; &nbsp; styles: [`</div><div>&nbsp; &nbsp; .my-component {</div><div>&nbsp; &nbsp; &nbsp; background: red;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; `],</div><div>&nbsp; &nbsp; encapsulation: ViewEncapsulation.None</div><div>})</div><div>export class MyComponent {</div><div>&nbsp; &nbsp; @Input() title: string = 'My Component';</div><div>}</div>","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":true,"gist":""},{"html":"This will generate a component with no ViewEncapsulation. Meaning the style written for this component will affect any other component that might us the same class and some styles written in some other component will also affect this component. This is due to the fact that not Shadow DOM is applied to this component.","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"ViewEncapsulation.Emulated","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":true,"isCodeSection":false,"gist":""},{"html":"This is the default view encapsulation. This will enable style encapsulation even if the browser doesn't support Shadow DOM. Angular does this by adding extra attributes to our component to enable this view encapsulation.","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"&lt;head&gt;<div>&nbsp; &lt;style&gt;.my-component[_ngcontent-1] {</div><div>&nbsp; background: red;</div><div>&nbsp; }&lt;/style&gt;</div><div>&lt;/head&gt;</div>","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":true,"gist":""},{"html":"Angular will push the above styles to the beginning of the page, here <i>_ngcontent-0 </i>is the additional attribute through which Angular emulates view encapsulation. The component will look something like:","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"&lt;my-component _ngcontent-0 _nghost-1&gt;<div>&nbsp; &nbsp; &nbsp; &nbsp;&lt;div class=\"my-component\" _ngcontent-1&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; My Component</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<br><div>&lt;/my-component&gt;</div></div>","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":true,"gist":""},{"html":"Note that the component has additional attributes, through this Angular performs scope styles which prevents the styles written in this component to bleed over to other components and vice versa.","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"ViewEncapsulation.Native","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":true,"isCodeSection":false,"gist":""},{"html":"This is basically Angular using the native Shadow DOM. We can activate this by simply mentioning <b>ViewEncapsulation.Native </b>in the components encapsulation property. The resulting code will look something like this:","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"import { ViewEncapsulation, Component, Input } from '@angular/core';<div><br></div><div>@Component({</div><div>&nbsp; &nbsp; selector: 'my-component',</div><div>&nbsp; &nbsp; template: `</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div class=\"my-component\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {{ title }}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;</div><div>&nbsp; &nbsp; `,</div><div>&nbsp; &nbsp; styles: [`</div><div>&nbsp; &nbsp; .my-component {</div><div>&nbsp; &nbsp; &nbsp; background: red;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; `],</div><div>&nbsp; &nbsp; encapsulation: ViewEncapsulation.Native</div><div>})</div><div>export class MyComponent {</div><div>&nbsp; &nbsp; @Input() title: string = 'My Component';</div><div>}</div>","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":true,"gist":""},{"html":"In this case the styles are pushed to the documents header. It will be embedded as part of the component itself as shown below:","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""},{"html":"&lt;my-component&gt;<div>&nbsp; &nbsp; &lt;style&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; .my-component {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; background: red;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &lt;/style&gt;</div><div>&nbsp; &nbsp; &lt;div class=\"my-component\"&gt;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; My Component</div><div>&nbsp; &nbsp; &lt;/div&gt;</div><div>&lt;/my-component&gt;</div>","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":true,"gist":""},{"html":"","isQuoted":false,"isGist":false,"isMainHeading":false,"isSubHeading":false,"isCodeSection":false,"gist":""}],"date":"2019-06-10T00:00:00.000Z","readTimeMin":"5"}